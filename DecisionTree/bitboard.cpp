#include"bitboard.h"

//None,Pawn,Cannon,Rook,Knight,Elephant,Guard,King 
int chessValue[8] = { 0,200,1500,3500,1500,800,800,/*100000000*/ 4000 };
int chessConfilictValue[8] = { 0,300 / 4,1500 / 4,3500 / 4,1500 / 4,800 / 4,800 / 4, 0 };
int chessConfilictValueGote[8] = { 0,300 / 4,1500 / 4,3500 / 4,1500 / 4,800 / 4,800 / 4, 0 };
//constexpr static int chessConfilictValueGote[8] = { 0,300 / 3,1500 / 3,3500 / 3,1500 / 3,800 / 3,800 / 3, 400 };
int moveShiftValue[8] = { 0,0,1,2,2,1,1,0 };
int _positionValueWrapper[2][8][10][9]
{
{//black chess
	{// None
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// Pawn
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{  20,   0,  20,   0, 200,   0,  20,   0,  20},
		{  30,   0, 100,   0,  80,   0, 100,   0,  30},
		{ 140, 160, 300, 330, 380, 330, 200, 160, 140},
		{ 160, 201, 232, 483, 404, 483, 232, 201, 160},
		{ 200, 231, 382, 543, 514, 543, 382, 231, 200},
		{ 230, 281, 342, 590, 590, 590, 342, 281, 230},
		{ 280, 341, 412, 590, 590, 590, 412, 341, 280},
	},
	{// Cannon
		{  20,  40,  30,  40,  40,  40,  30,  30,  20},
		{  40,  30,  30,  40,  40,  40,  30,  30,  20},
		{  20,  30,  30,  40,  80,  40,  30,  30,  20},
		{  20,  30,  30,  40, 100,  40,  30,  30,  20},
		{  20,  30,  30,  40, 100,  40,  30,  30,  20},
		{  20,  30,  30,  40, 100,  40,  30,  30,  20},
		{  20,  30,  30,  40, 100,  40,  30,  30,  20},
		{  20,  30,  30,  40,  40,  40,  30,  30,  20},
		{  20,  30,  30,  40,  40,  40,  30,  30,  20},
		{ 100, 100, 100,  80,  80,  80, 100, 100, 100},
	},
	{// Rook
		{ -50,  50,  20,  50,  50,  50,  20,  50, -50},
		{  50,  30,  30,  50,  50,  50,  30,  30,  50},
		{  20,  30,  40,  50,  50,  50,  40,  30,  20},
		{  20,  30,  40,  50,  50,  50,  40,  30,  20},
		{  20,  50,  50,  50,  50,  50,  50,  50,  20},
		{  20,  50,  50,  50,  50,  50,  50,  50,  20},
		{  20,  30,  40,  50,  50,  50,  40,  30,  20},
		{  20,  30,  40,  50,  50,  50,  40,  30,  20},
		{  20,  30,  30,  50,  50,  50,  30,  30,  20},
		{  20,  30,  30,  50,  50,  50,  30,  30,  20},
	},
	{// Knight
		{  10, -50,  10,  10,  10,  10,  10, -50,  10},
		{  10,  30,  30,  30,-100,  30,  30,  30,  10},
		{  10,  30,  40,  40,  40,  40,  40,  30,  10},
		{  10,  30,  40,  50,  50,  50,  40,  30,  10},
		{  10,  30,  40,  50,  50,  50,  40,  30,  10},
		{ 110, 130, 140, 150, 150, 150, 140, 130, 110},
		{ 110, 130, 140, 150, 150, 150, 140, 130, 110},
		{ 110, 130, 140, 150, 150, 150, 140, 130, 110},
		{ 110, 130, 130, 130, 130, 130, 130, 130, 110},
		{ 110, 110, 110, 110, 110, 110, 110, 110, 110},
	},
	{// Elephant
		{   0,   0,  40,   0,   0,   0,  40,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{  20,   0,   0,   0, 100,   0,   0,   0,  20},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,  30,   0,   0,   0,  30,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// Guard
		{   0,   0,   0, 100,   0, 100,   0,   0,   0},
		{   0,   0,   0,   0, 100,   0,   0,   0,   0},
		{   0,   0,   0,  50,   0,  50,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// King 
		{   0,   0,   0, 350, 500, 350,   0,   0,   0},
		{   0,   0,   0, 200, 350, 200,   0,   0,   0},
		{   0,   0,   0,  50,  50,  50,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
},
{//player chess
	{// None
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// Pawn 
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// Cannon 
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// Rook
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// Knight
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// Elephant
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// Guard
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
	{// King 
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
		{   0,   0,   0,   0,   0,   0,   0,   0,   0},
	},
},
};
int positionValue[2][8][256];


struct _Init
{
	_Init()
	{
		for (int i = 0; i < 8; i++)
		{
			for (int j = 0; j < 10; j++)
			{
				for (int k = 0; k < 9; k++)
				{
					_positionValueWrapper[1][i][j][k] = _positionValueWrapper[0][i][9 - j][k];
				}
			}
		}
		std::memset(positionValue, 0, sizeof(positionValue));
		for (int i = 0; i < 8; i++)
		{
			for (int j = 0; j < 256; j++)
			{ 
				int x = j % 16 - 3;
				int y = j / 16 - 3;
				if (x < 0 || x >= 9 || y < 0 || y >= 10)
				{
					continue;
				}
				for (int country = 0; country < 2; country++)
				{
					for (int type = 0; type < 8; type++)
					{
						positionValue[country][type][j] = _positionValueWrapper[country][type][y][x];
					}
				}
			}
		}
	}
}_init;